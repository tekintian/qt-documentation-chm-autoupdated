name: Qt Docs autobuild

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 5 * * *'

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      version_current: ${{ steps.previoustag.outputs.tag }}
      version_new: ${{ steps.version_new.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
           python-version: 3.8
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install html5lib beautifulsoup4

      - name: Get latest Qt version
        id: version_new
        run: echo "::set-output name=version::$(python get_qt_docs.py --latest-version)"

      - name: Sanity check, check if latest version > current
        if: steps.version_new.outputs.version != steps.previoustag.outputs.tag
        run: |
          function ver { printf "%03d%03d%03d%03d" $(echo "$1" | tr '.' ' '); }
          [ $(ver ${{ steps.version_new.outputs.version }}) -gt $(ver ${{ steps.previoustag.outputs.tag }}) ]

  build:
    needs: check_version
    if: needs.check_version.outputs.version_current != needs.check_version.outputs.version_new
    runs-on: windows-latest
    env:
      VERSION_CURRENT: ${{ needs.check_version.outputs.version_current }}
      VERSION_NEW: ${{ needs.check_version.outputs.version_new }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout qt-documentation-chm
        uses: actions/checkout@v2
        with:
          repository: vzhd1701/qt-documentation-chm
          path: qt-documentation-chm

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
           python-version: 3.8
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install lxml path html5lib bs4 libsass
          choco install aria2 wget

      - name: Build Qt docs
        run: bash build_docs.sh ${{ env.VERSION_NEW }}

      - name: Update Qt version in readme
        run: sed -i "s/^\[\*\*Download Qt Documentation CHM.*\*\*\]/[**Download Qt Documentation CHM ${{ env.VERSION_NEW }}**]/" README.md

      - name: Commit changes & create tag
        uses: EndBug/add-and-commit@v7.2.0
        with:
          message: "(autoupdate) update Qt Docs version ${{ env.VERSION_CURRENT }} -> ${{ env.VERSION_NEW }}"
          add: "README.md"
          tag: ${{ env.VERSION_NEW }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          body: "Qt Docs ${{ env.VERSION_NEW }} CHM (update from ${{ env.VERSION_CURRENT }})"
          artifacts: "*.zip"
          tag: ${{ env.VERSION_NEW }}
          token: ${{ secrets.GITHUB_TOKEN }}
